# source:
# https://docs.github.com/en/actions/guides/building-and-testing-python

name: Python Application

on: [push, pull_request]

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13.2
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.x
      uses: actions/setup-python@v2
      with:
        # Semantic version range syntax or exact version of a Python version
        python-version: '3.x'
        # Optional - x64 or x86 architecture, defaults to x64
        architecture: 'x64'
    # You can test your matrix by printing the current Python version
    - name: Display Python version
      run: python -c "import sys; print(sys.version)"
    - name: psycopg2 prerequisites
      run: sudo apt-get install libpq-dev    
    - name: Install dependencies
      run: |
        cp contrib/env-sample .env
        python -m pip install --upgrade pip
        pip install -r requirements.txt    
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Test with pytest
      run: |
        pytest
    
    - name: Run migrations
      run: python manage.py migrate
    
      # after-success:
        # codecov    
